// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// FARest
arma::mat FARest(arma::mat& y, arma::vec& u, double u0, double p, double d, double bwp);
RcppExport SEXP _mxfar_FARest(SEXP ySEXP, SEXP uSEXP, SEXP u0SEXP, SEXP pSEXP, SEXP dSEXP, SEXP bwpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type u0(u0SEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type bwp(bwpSEXP);
    rcpp_result_gen = Rcpp::wrap(FARest(y, u, u0, p, d, bwp));
    return rcpp_result_gen;
END_RCPP
}
// MXFARest
arma::mat MXFARest(arma::vec SeriesNum, int Tlength, arma::mat& y, arma::vec& u, double u0, double p, double d, double bwp);
RcppExport SEXP _mxfar_MXFARest(SEXP SeriesNumSEXP, SEXP TlengthSEXP, SEXP ySEXP, SEXP uSEXP, SEXP u0SEXP, SEXP pSEXP, SEXP dSEXP, SEXP bwpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type SeriesNum(SeriesNumSEXP);
    Rcpp::traits::input_parameter< int >::type Tlength(TlengthSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type u0(u0SEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type bwp(bwpSEXP);
    rcpp_result_gen = Rcpp::wrap(MXFARest(SeriesNum, Tlength, y, u, u0, p, d, bwp));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mxfar_FARest", (DL_FUNC) &_mxfar_FARest, 6},
    {"_mxfar_MXFARest", (DL_FUNC) &_mxfar_MXFARest, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_mxfar(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
